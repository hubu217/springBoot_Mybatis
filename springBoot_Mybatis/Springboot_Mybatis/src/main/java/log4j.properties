#=================================配置1
#log4j.rootLogger=INFO,STDOUT,ACP_SDK_LOG,SDK_ERR_LOG,SDK_MSG_LOG
##STD
#log4j.appender.STDOUT=org.apache.log4j.ConsoleAppender
#log4j.appender.STDOUT.ImmediateFlush=true
#log4j.appender.STDOUT.layout=org.apache.log4j.PatternLayout
#log4j.appender.STDOUT.layout.ConversionPattern=[%d{HH:mm:ss}|%-5p|(%c)]=[%m]%n
##log4j.appender.SERVER_INFO=org.apache.log4j.DailyRollingFileAppender
##INFO
#log4j.appender.ACP_SDK_LOG=org.apache.log4j.DailyRollingFileAppender
##log4j.appender.mpiLog.Threshold=INFO
#log4j.appender.ACP_SDK_LOG.ImmediateFlush=true
#log4j.appender.ACP_SDK_LOG.DatePattern='.'yyyy-MM-dd
#log4j.appender.ACP_SDK_LOG.File=D:\\logs\\acpsdk.log
#log4j.appender.ACP_SDK_LOG.layout=org.apache.log4j.PatternLayout
#log4j.appender.ACP_SDK_LOG.layout.ConversionPattern=[(%d{yyyyMMddHHmmss})|(%c)]=[%m]%n
##ERROR
#log4j.appender.SDK_ERR_LOG=org.apache.log4j.DailyRollingFileAppender
##log4j.appender.SDK_ERR_LOG.Threshold=INFO
#log4j.appender.SDK_ERR_LOG.ImmediateFlush=true
#log4j.appender.SDK_ERR_LOG.DatePattern='.'yyyy-MM-dd
#log4j.appender.SDK_ERR_LOG.File=D:\\logs\\acpsdk-error.log
#log4j.appender.SDK_ERR_LOG.encoding=UTF-8
#log4j.appender.SDK_ERR_LOG.layout=org.apache.log4j.PatternLayout
#log4j.appender.SDK_ERR_LOG.layout.ConversionPattern=[(%d{yyyyMMddHHmmss})|(%c)]=[%m]%n
##MESSAGE
#log4j.appender.SDK_MSG_LOG=org.apache.log4j.DailyRollingFileAppender
##log4j.appender.SDK_MSG_LOG.Threshold=INFO
#log4j.appender.SDK_MSG_LOG.ImmediateFlush=true
#log4j.appender.SDK_MSG_LOG.DatePattern='.'yyyy-MM-dd
#log4j.appender.SDK_MSG_LOG.File=D:\\logs\\acpsdk-message.log
#log4j.appender.SDK_MSG_LOG.encoding=UTF-8
#log4j.appender.SDK_MSG_LOG.layout=org.apache.log4j.PatternLayout
#log4j.appender.SDK_MSG_LOG.layout.ConversionPattern=[(%d{yyyyMMddHHmmss})|(%c)]=[%m]%n






#===================================配置2
# Configure logging for testing: optionally with log file
log4j.rootLogger=info, stdout, logfile
# log4j.rootLogger=WARN, stdout, logfile

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n

# 配置logfile输出到文件中 文件大小到达指定尺寸的时候产生新的日志文件
log4j.appender.logfile=org.apache.log4j.RollingFileAppender
# 保存编码格式
log4j.appender.logfile.Encoding=UTF-8
# 输出文件位置此为项目根目录下的logs文件夹中
log4j.appender.logfile.File=logs/root.log
# 后缀可以是KB,MB,GB达到该大小后创建新的日志文件
log4j.appender.logfile.MaxFileSize=10MB
# 设置滚定文件的最大值3 指可以产生root.log.1、root.log.2、root.log.3和root.log四个日志文件
log4j.appender.logfile.MaxBackupIndex=3  
# 配置logfile为自定义布局模式
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %F %p %m%n


